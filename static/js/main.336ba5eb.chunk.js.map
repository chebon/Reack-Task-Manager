{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","console","log","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.336ba5eb.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n    return( \n    <button onClick={onClick} style={{backgroundColor: color}} \n    className='btn'>{text}</button>\n    )\n\n}\n\nButton.defaultProps = {\n    color: 'steel blue',\n  }\n  \n\nButton.propTypes = {\n    title: PropTypes.string,\n    color: PropTypes.string,\n   // onClick: PropTypes.func.isRequired\n  }\n\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport { useLocation } from \"react-router-dom\";\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    const onClick = () => {\n        console.log('Click t')\n    }\n    const location = useLocation()\n    return (\n        <header className='header'>\n            <h1>{title} </h1>\n            {\n                location.pathname === '/' &&\n                <Button color={showAdd ? 'red' : 'green'} text={showAdd ?\n                    'close' : 'Add'} onClick={onAdd} />\n            }\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Manager',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div \n        className={`task ${task.reminder ? 'reminder' : ''}`}\n         onDoubleClick={() =>onToggle(task.id)}>\n            <h3>{task.text} <FaTimes  style={{color: 'red', cursor: \n            'pointer'}} onClick={() => onDelete(task.id)} /></h3>\n            <h3>{task.day}</h3>\n            \n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n \nconst Tasks = ({tasks, onDelete, onToggle}) => {\n\n    return (\n        <>\n\n           {tasks.map((task) => (\n           <Task key={task.id} task={task}\n            onDelete={onDelete} \n            onToggle={onToggle}/>))} \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from \"react\";\n\n\nconst AddTask = ({onAdd}) => {\n\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onsubmit = (e) =>{\n        e.preventDefault()\n        if(!text){\n            alert('please add a task')\n            return false;\n        }\n        onAdd({text, day, reminder})\n        setDay('')\n        setText('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onsubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add \n                Task' value={text} onChange={(e) =>setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' value={day} onChange={(e) =>setDay(e.target.value)} placeholder='Add \n                Day & time' />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' \n                checked='reminder'\n                value={reminder} onChange={(e) =>setReminder(e.currentTarget.checked)} />\n            </div>\n            <input type='submit' className='btn btn-block' value='Save Task' />\n            \n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from \"react-router-dom\";\nconst Footer = () => {\n    return (\n        <footer>\n            <p>copyright &copy; 2021</p>\n            <Link to='/about'>about</Link>\n        \n        </footer>\n\n\n    )\n}\n\nexport default Footer\n","import { Link } from \"react-router-dom\";\nconst About = () => {\n    return (\n        <div>\n           <h4> Version 1.0.0</h4>\n           <Link to=\"/\">Go back</Link> \n        </div>\n    )\n}\n\nexport default About\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { FaTrashAlt } from 'react-icons/fa'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\n\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n\n    const getTasks = async () => {\n\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    console.log(data)\n    return data;\n  }\n\n  const fetchTask = async () => {\n    const res = await fetch(`http://localhost:5000/tasks/$(id)`)\n    const data = await res.json()\n    console.log(data)\n    return data;\n  }\n\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n    setTasks([...tasks, data])\n\n  }\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n\n  const toggleReminder = async (id) => {\n\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ?\n      { ...task, reminder: data.reminder } : task))\n  }\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask} />\n\n        <Route path='/about' exact render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ?\n              <Tasks tasks={tasks}\n                onDelete={deleteTask}\n                onToggle={toggleReminder}\n              /> : 'No tasks to show'\n            }\n          </>\n        )} />\n        <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}